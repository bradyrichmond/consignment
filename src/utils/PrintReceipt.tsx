import { Item, Tender } from "../models";

export const generateReceipt = async (items: Item[], paymentTypes: Tender[], transactionId: string, address1: string, address2: string) => {
    let lineNumber = 6;
    const subtotal = items.reduce((a: number, b: Item) => Number(a + b.price), 0);

    let output = `^XA^FO100,50^GFA,4704,4704,56,gY0CI02S03gX01,gX01CI0ES07gX078,gW01FC007ER07FgW03F8,gW01FC00FER07FgW03F,gX07C003ER01FgW01F,gX07C001ER01FgX0F,:::::::::::gX07C001EM03J01FgX0F,::::gX07C001EM07J01FgX0F,U02gH07C001EM0FJ01FO02gN0F,N0FFCJ071FFC01FFCK01FFEJ07C001EL01FJ01F0FFEK0E3FCI01FF8K0IFL07FF8FJ03FF8,M03IFI01F3FFE03IFK07IF8I07C001EK01JFC01F3IF8I03E7FEI0IFEJ07IFCJ01IFEFJ0IFC,M0F80F8007E781F8781F8I01F00FCI07C001EK03JFC01E7C0FCI0FEFFE001F00F8I0F807EJ03E00FFI01E03E,M0E0038003FE007CE007CI03C003EI07C001EM0EJ01FF003EI07FC0E003C007C003E003EJ078003FI03800E,L01C001C001FC003DC003CI078003EI07C001EM0FJ01FC001EI03F8060078003E003C001FJ0FJ0FI078007,L01CI0C001F8003F8001EI07I01EI07C001EM0FJ01F8001FI03FK0FI01E0038I0FI01EJ0FI07I03,L01CL01FI01F8001EI06I01FI07C001EM0FJ01F8I0FI03FJ01FI03F003J0FI03EJ0FI07,L01CL01FI01FI01EN0FI07C001EM0FJ01FJ0F8003EJ01LFM0F8003CJ0FI07,L01EL01EI01FI01FN0FI07C001EM0FJ01FJ078003EJ03LFM078007CJ0FI078,L01F8K01EI01FJ0FN0FI07C001EM0FJ01FJ078003EJ03ER078007CJ0FI07E,38J01FFK01EI01FJ0FK07IFI07C001EM0FJ01FJ078003EJ03CO03IF80078J0FI07FCM0387CK0FFEJ01EI01FJ0FJ07JFI07C001EM0FJ01FJ078003EJ03CN03JF800F8J0FI03FF8L0FCFEK07FFCI01EI01FJ0FI01FE03FI07C001EM0FJ01FJ078003EJ03CN0FF01F800F8J0FI01IFL0FEFEK01IFI01EI01FJ0FI03EI0FI07C001EM0FJ01FJ078003EJ03CM01FI07800F8J0FJ07FFCK0FEFEL03FF8001EI01FJ0FI07CI0FI07C001EM0FJ01FJ078003EJ03CM03EI07800F8J0FK0FFEK0FEFEM07FC001EI01FJ0FI0F8I0FI07C001EM0FJ01FJ078003EJ03CM07CI07800F8J0FK01FFK0FE7CN0FE001EI01FJ0FI0F8I0FI07C001EM0FJ01FJ078003EJ03CM078I0780078J0FL03F8J07C1O03E001EI01FJ0FI0FJ0FI07C001EM0FJ01FJ078003EJ03EM0F8I0F80078J0FM0F8J01,P01E001EI01FJ0F001FI01FI07C001EM0FJ01FJ078003EJ03EM0F8I0F8007CJ0FM078,Q0E001EI01FJ0F001FI01FI07C001EM0FJ01FJ078003EJ01FM0F8I0F8007CJ0FM038,L02J0E001EI01FJ0FI0FI01FI07C001EM0FJ01FJ078003EJ01FM0F8I0F8003EJ0FI08I038,L03J0E001EI01FJ0FI0F8003FI07C001EM0FJ01FJ078003EK0F8L078001F8003EJ0FI0CI038,L038001E001EI01FJ0FI0F8007FI07C001EM0FJ01FJ078003EK07CI04007C003F8001FJ0F800EI078,L03C001C001FI01FI01FI07C00FFI07C001EM0F80201FJ078003EK03E001C007E007F8I0F8001F800FI07,L01E007C001FI01FI01FI07E01F7C007C003FM0FC0E01FJ0FC003EK01FC0F8003F00F7EI07E007FE007800F,L01F81FI03F8003F8003F8003IFEFC00FE007FM07FFC03F8001FE007FL0JFI01IFE7EI03KFE007E07C,M07FFEI07FC007FC007FCI0IF8E001FF00FF8L03FF807FC001FE00FF8K03FFCJ07FFC7K0IFCEI01IF8,N0FFg03FE08V01FEgG07EK01FF04K01FE0CJ03FC,,::::::::::::::::::gU07FJ03FJ01FCN0C38I08I07FK0F8,gU07FJ073CI01FEN0C3J08I07FCI01DC,gU06K0C0EI0106N0C6J08I060EI030C,gU06J01806I0103N0CCJ08I0606I03,gU06J01803I0103N0D8J08I0603I038,gU06J03003I0106N0FK08I0603I01E,gU07FI03003I01FEN0FK08I0603J0F8,gU06J03003I01FCN0F8J08I0603J01C,gU06J01802I010CN0DCJ08I0603K06,gU06J01806I010CN0CCJ08I0606I0206,gU06K0C0CI0106N0C6J08I060EI0306,gU06K07F8I0106N0C3J08I07FCI01FC,gU06K03FJ0103N0C18I08I07FK0F8,^FS^FX Top section with logo, name and address.^CF0,60^CF0,30^FO200,195^FD${address1}^FS^FO200,235^FD${address2}^FS^FO50,280^GB550,3,3^FS`;

    for(let i = 0; i < items.length; i++) {
        output += generateLineItem(items[i], lineNumber);
        lineNumber++;
    }

    output+=`^FO50,430^GB550,3,3^FS`;

    output += generateTransactionQrCode(transactionId);
    lineNumber += 2;
    output += generateInfoLine('Subtotal', currencyFormatter.format(subtotal).toString(), lineNumber);
    lineNumber++;
    output += generateInfoLine('Tax', currencyFormatter.format((subtotal * .1)).toString(), lineNumber);
    lineNumber++;
    output += generateInfoLine('Total', currencyFormatter.format((subtotal * 1.1)).toString(), lineNumber);
    lineNumber++;
    for (let i = 0; i < paymentTypes.length; i++) {
        output += generateInfoLine(paymentTypes[i].label, currencyFormatter.format(paymentTypes[i].receivedAmount).toString(), lineNumber);
        lineNumber += 2;
    }
    output += generateReturnPolicy(lineNumber);
    lineNumber += 2
    output += generateWebsite(lineNumber);
    lineNumber++;
    output += '^XZ';

    return output;
}

//needs datetime printed
const generateTransactionQrCode = (transactionId: string) => {
    return `^FX Third section with bar code.^FO50,185^BQ^FDQA,${transactionId}^FS"`
}

const generateLineItem = (item: Item, lineNumber: number) => {
    const { itemName, price } = item;
    return `^FO50,${lineNumber*50}^FD${itemName}^FS^FO500,${lineNumber*50}^FD${currencyFormatter.format(parseFloat(price))}^FS`;
}

const generateInfoLine = (label: string, amount: string, lineNumber: number) => {
    return `^FO50,${lineNumber*50}^FD${label}:^FS^FO500,${lineNumber*50}^FD${amount}^FS`;
}

const generateReturnPolicy = (lineNumber: number) => {
    return `^FO50,${lineNumber*50}^FDYou have 15 days for store credit or exchange^FS`;
}

const generateWebsite = (lineNumber: number) => {
    return `^FO50,${lineNumber*50}^FDhttps://www.smallthreadsforkids.com^FS`;
}
export const currencyFormatter = new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: 'USD'
});

export const currencyFormatterNoSign = new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: 'USD',
    signDisplay: 'never'
});
